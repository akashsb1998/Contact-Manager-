{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","ShowContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","class","style","cursor","float","color","bind","react_router_dom","to","marginRight","striped","bordered","hover","size","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-ivalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","uuid","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","Header","branding","href","About","NotFound","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3de12209.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nclass Contact extends Component {\n  state = {\n    ShowContactInfo: false\n  };\n  onDeleteClick = async (id, dispatch) => {\n    // this.setState({ showContactInfo: !this.state.showContactInfo });\n    // this.props.deleteClickHandler();\n    //    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n  // onShowClick = e => {\n  //   // this.setState({ showContactInfo: !this.state.showContactInfo });\n  //   // console.log(name);\n  // };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { ShowContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      ShowContactInfo: !this.state.ShowContactInfo\n                    })\n                  }\n                  class=\"fa fa-sort-down\"\n                  // aria-hidden=\"true\"\n                  style={{ cursor: \"pointer\" }}\n                />{\" \"}\n                <i\n                  class=\"fa fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  // aria-hidden=\"true\"\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              <table striped bordered hover size=\"sm\">\n                <tbody>\n                  {ShowContactInfo ? (\n                    <ul className=\"list-group\">\n                      <tr>\n                        <li className=\"list-group-item\">Email:{email}</li>\n                      </tr>\n                      <tr>\n                        <li className=\"list-group-item\">Phone:{phone}</li>\n                      </tr>\n                    </ul>\n                  ) : null}\n                </tbody>\n              </table>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n  // deleteClickHandler: PropTypes.func.isRequired\n  // name: PropTypes.string.isRequired,\n  // email: PropTypes.string.isRequired,\n  // phone: PropTypes.string.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>\n                List\n              </h1>\n\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.key}\n                  contact={contact}\n                  // name={contact.name}\n                  // email={contact.email}\n                  // phone={contact.phone}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-ivalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\"> {error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    const { name, email, phone, error } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"phone is required\" } });\n      return;\n    }\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone,\n      error\n    };\n\n    await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact);\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n\n    //clearState\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //for redirecting to the homepage after adding the contact.\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  //   onEmailChange = e => this.setState({ email: e.target.value });\n  //   onPhoneChange = e => this.setState({ phone: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav\n      className=\"navbar navbar-expand-sm navbar-dark bg-danger\n    mb-3 py-0\"\n    >\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add Contacts\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts </p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n//import uuid from \"uuid\";\nimport axios from \"axios\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"phone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //clearState\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //for redirecting to the homepage after adding the contact.\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  //   onEmailChange = e => this.setState({ email: e.target.value });\n  //   onPhoneChange = e => this.setState({ phone: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from \"./Components/contacts/Contacts\";\nimport AddContact from \"./Components/contacts/AddContact\";\n//import Contact from \"./Components/contacts/Contact\";\nimport Header from \"./Components/layout/Header\";\n//import MyNav from \"./Components/MyNav\";\nimport { Provider } from \"./context\";\nimport About from \"./Components/pages/About\";\nimport NotFound from \"./Components/pages/NotFound\";\nimport EditContact from \"./Components/contacts/EditContact\";\n//import RenderCont from \"./Components/RenderCont.js\";\n\nclass App extends Component {\n  render() {\n    // console.log(contacts);\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            {/* <MyNav /> */}\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <AddContact />\n              <Contacts /> */}\n              {/* <Contact\n            name=\"Dharam Singh Bisht\"\n            email=\"bdharam7@gmail.com\"  \n            phone=\"8439700516\"\n          />\n          <Contact\n            name=\"yogesh Singh\"\n            email=\"yogi@gmail.com\"\n            phone=\"3333333333\"\n          /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}